<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="/vendor/tailwind.css" rel="stylesheet" />
    
    <title>Chat</title>
</head>

<body>
    <div class="py-5 flex bg-gray-200 h-screen">
        <div class="flex flex-col ">
            <form method="POST" action="/api/logout">
                <button type="submit" class="ml-5 rounded h-50 p-5 w-50 bg-red-100 shadow text-center hover:bg-red-200">Log out</button>
            </form>
            <div class="flex flex-col" id="channel-container"></div>
            <div class=" hover:bg-white mt-3 ml-5 rounded-lg h-50 w-50 p-3  bg-green-200 text-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z" />
                  </svg>
            </div>
    
        </div>
        <div class="flex flex-grow flex-col bg-white shadow h-full mx-5 rounded-lg w-50 p-3 h-full">
            <div id="chat-board" class="flex flex-col overflow-auto flex-grow bg-gray-200 rounded-lg h-3/6 p-5">
                
            </div>
                <form id="form" action="">
            <div class="flex rounded-lg">
                    <input 
                    type="text"
                    id="input"
                    class="mt-2 block border border-gray-100 bg-gray-200 w-full p-3 rounded mb-4 focus:outline-none focus:ring-1 focus:ring-blue-200"
                    name="message"
                    autocomplete="off"
                    placeholder="Your message" />
                <button
                    class="ml-3 mt-2 mb-4 rounded-lg p-3 bg-green-200 hover:bg-green-300"
                >Send</button>
            </div>
                </form>
        </div>

    </div>
    </div>
</body>
<script src="/vendor/socket.io.min.js"></script>
<script>
  var socket = io();
  var user = <%- JSON.stringify(user) %>;
  var roomData = <%- JSON.stringify(roomList.roomList) %>;
  var logData = <%- JSON.stringify(logData.log) %>;

  var form = document.getElementById('form');
  var input = document.getElementById('input');

  // Emit chat message via socket
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (input.value) {
      socket.emit('chat message', user.username, input.value);
      input.value = '';
    }
  });

  // Get broadcast message from server
  socket.on('chat message', function(user, msg) {
    createChatBubble(user, msg);
  });

  function getChatLog(id) {
      console.log(`/api/log/${id}`)
  }

  // Create chat bubble and append it to message board
  function createChatBubble(chatuser, message) {
    var child = document.createElement('div');  
        if(user.username.toLowerCase() != chatuser.toLowerCase()) {
            child.className = "flex";
            child.innerHTML = `
                <div class="flex flex-col">
                    <span class="w-full">${chatuser}</span>
                    <span class="flex-grow-0 ml-5 mt-2 hover:bg-green-200 rounded-lg p-2 bg-white shadow">
                        <p>${message}</p>
                    </span>
                </div>
        `;
        }
        else {
            child.className = "flex flex-row-reverse";
            child.innerHTML = `
                <div class="flex flex-col">
                    <span class="w-full text-right">Me</span>
                    <span class="flex-grow-0 ml-5 mt-2 hover:bg-green-200 rounded-lg p-2 bg-white shadow">
                        <p>${message}</p>
                    </span>
                </div>
        `;
        }
        document.getElementById("chat-board").appendChild(child);
  }

    roomData.map(mapData => {
        var child = document.createElement('div');  
        child.className = "flex flex-grow w-full"
        child.innerHTML = `<button onclick="getChatLog(${mapData.roomId})" class="ml-5 mt-2 w-full hover:bg-green-200 rounded-lg p-5 bg-white shadow">
                ${mapData.roomName}
            </button>`;
        document.getElementById("channel-container").appendChild(child);
    })

    logData.map(mapData => createChatBubble(mapData.user, mapData.message))
</script>
</html>